/**
 * Traction Guest API
 * The Traction Guest API is currently under limited release to select customers as we gather and iterate on feedback.  # Getting Started If you are interested in getting early access to the API, please send us an email to [support@tractionguest.com](mailto:support@tractionguest.com).  We will also add you to our Slack channel where you can ask questions and get further help.  # Terms and Conditions Please visit: [https://tractionguest.com/tos/api/](https://tractionguest.com/tos/api/)  # Versioning This API follows [semantic versioning](https://semver.org/), which follows the `Major`.`Minor`.`Patch` format.  * The `Major` number increments when potentially incompatible changes are made. * The `Minor` number increments when backwards-compatible additions are made. * The `Patch` number increments when backwards-compatible bug-fixes are made. 
 *
 * The version of the OpenAPI document: 0.14.1
 * Contact: support@tractionguest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * The root of the Invite type&#39;s schema.
 **/
@ApiModel(description = "The root of the Invite type's schema.")
public class Invite {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("registration")
  private Object registration = null;
  @SerializedName("mobile_number")
  private String mobileNumber = null;
  @SerializedName("email")
  private String email = null;
  @SerializedName("end_date")
  private Date endDate = null;
  @SerializedName("invite_watchlist")
  private Object inviteWatchlist = null;
  @SerializedName("hosts")
  private List<Object> hosts = null;
  public enum WatchlistColourEnum {
     RED,  GREEN,  YELLOW,  ORANGE, 
  };
  @SerializedName("watchlist_colour")
  private WatchlistColourEnum watchlistColour = null;
  @SerializedName("location")
  private Object location = null;
  @SerializedName("start_date")
  private Date startDate = null;
  @SerializedName("last_name")
  private String lastName = null;
  @SerializedName("first_name")
  private String firstName = null;
  @SerializedName("group_visit")
  private Object groupVisit = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getRegistration() {
    return registration;
  }
  public void setRegistration(Object registration) {
    this.registration = registration;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMobileNumber() {
    return mobileNumber;
  }
  public void setMobileNumber(String mobileNumber) {
    this.mobileNumber = mobileNumber;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getEmail() {
    return email;
  }
  public void setEmail(String email) {
    this.email = email;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEndDate() {
    return endDate;
  }
  public void setEndDate(Date endDate) {
    this.endDate = endDate;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getInviteWatchlist() {
    return inviteWatchlist;
  }
  public void setInviteWatchlist(Object inviteWatchlist) {
    this.inviteWatchlist = inviteWatchlist;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Object> getHosts() {
    return hosts;
  }
  public void setHosts(List<Object> hosts) {
    this.hosts = hosts;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public WatchlistColourEnum getWatchlistColour() {
    return watchlistColour;
  }
  public void setWatchlistColour(WatchlistColourEnum watchlistColour) {
    this.watchlistColour = watchlistColour;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getLocation() {
    return location;
  }
  public void setLocation(Object location) {
    this.location = location;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getStartDate() {
    return startDate;
  }
  public void setStartDate(Date startDate) {
    this.startDate = startDate;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getLastName() {
    return lastName;
  }
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getFirstName() {
    return firstName;
  }
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getGroupVisit() {
    return groupVisit;
  }
  public void setGroupVisit(Object groupVisit) {
    this.groupVisit = groupVisit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Invite invite = (Invite) o;
    return (this.id == null ? invite.id == null : this.id.equals(invite.id)) &&
        (this.registration == null ? invite.registration == null : this.registration.equals(invite.registration)) &&
        (this.mobileNumber == null ? invite.mobileNumber == null : this.mobileNumber.equals(invite.mobileNumber)) &&
        (this.email == null ? invite.email == null : this.email.equals(invite.email)) &&
        (this.endDate == null ? invite.endDate == null : this.endDate.equals(invite.endDate)) &&
        (this.inviteWatchlist == null ? invite.inviteWatchlist == null : this.inviteWatchlist.equals(invite.inviteWatchlist)) &&
        (this.hosts == null ? invite.hosts == null : this.hosts.equals(invite.hosts)) &&
        (this.watchlistColour == null ? invite.watchlistColour == null : this.watchlistColour.equals(invite.watchlistColour)) &&
        (this.location == null ? invite.location == null : this.location.equals(invite.location)) &&
        (this.startDate == null ? invite.startDate == null : this.startDate.equals(invite.startDate)) &&
        (this.lastName == null ? invite.lastName == null : this.lastName.equals(invite.lastName)) &&
        (this.firstName == null ? invite.firstName == null : this.firstName.equals(invite.firstName)) &&
        (this.groupVisit == null ? invite.groupVisit == null : this.groupVisit.equals(invite.groupVisit));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.registration == null ? 0: this.registration.hashCode());
    result = 31 * result + (this.mobileNumber == null ? 0: this.mobileNumber.hashCode());
    result = 31 * result + (this.email == null ? 0: this.email.hashCode());
    result = 31 * result + (this.endDate == null ? 0: this.endDate.hashCode());
    result = 31 * result + (this.inviteWatchlist == null ? 0: this.inviteWatchlist.hashCode());
    result = 31 * result + (this.hosts == null ? 0: this.hosts.hashCode());
    result = 31 * result + (this.watchlistColour == null ? 0: this.watchlistColour.hashCode());
    result = 31 * result + (this.location == null ? 0: this.location.hashCode());
    result = 31 * result + (this.startDate == null ? 0: this.startDate.hashCode());
    result = 31 * result + (this.lastName == null ? 0: this.lastName.hashCode());
    result = 31 * result + (this.firstName == null ? 0: this.firstName.hashCode());
    result = 31 * result + (this.groupVisit == null ? 0: this.groupVisit.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Invite {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  registration: ").append(registration).append("\n");
    sb.append("  mobileNumber: ").append(mobileNumber).append("\n");
    sb.append("  email: ").append(email).append("\n");
    sb.append("  endDate: ").append(endDate).append("\n");
    sb.append("  inviteWatchlist: ").append(inviteWatchlist).append("\n");
    sb.append("  hosts: ").append(hosts).append("\n");
    sb.append("  watchlistColour: ").append(watchlistColour).append("\n");
    sb.append("  location: ").append(location).append("\n");
    sb.append("  startDate: ").append(startDate).append("\n");
    sb.append("  lastName: ").append(lastName).append("\n");
    sb.append("  firstName: ").append(firstName).append("\n");
    sb.append("  groupVisit: ").append(groupVisit).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
