/**
 * Traction Guest API
 * The Traction Guest API is currently under limited release to select customers as we gather and iterate on feedback.  # Getting Started If you are interested in getting early access to the API, please send us an email to [support@tractionguest.com](mailto:support@tractionguest.com).  We will also add you to our Slack channel where you can ask questions and get further help.  # Terms and Conditions Please visit: [https://tractionguest.com/tos/api/](https://tractionguest.com/tos/api/)  # Versioning This API follows [semantic versioning](https://semver.org/), which follows the `Major`.`Minor`.`Patch` format.  * The `Major` number increments when potentially incompatible changes are made. * The `Minor` number increments when backwards-compatible additions are made. * The `Patch` number increments when backwards-compatible bug-fixes are made. 
 *
 * The version of the OpenAPI document: 0.16.0
 * Contact: support@tractionguest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * The allowable changes when updating a Group Visit (Appointment).
 **/
@ApiModel(description = "The allowable changes when updating a Group Visit (Appointment).")
public class GroupVisitUpdateParams {
  
  @SerializedName("name")
  private String name = null;
  @SerializedName("start_time")
  private String startTime = null;
  @SerializedName("end_time")
  private String endTime = null;
  @SerializedName("location_id")
  private Integer locationId = null;
  @SerializedName("registration_limit")
  private Integer registrationLimit = null;
  @SerializedName("manual_registration_approval")
  private Boolean manualRegistrationApproval = null;
  @SerializedName("public_registration_enabled")
  private Boolean publicRegistrationEnabled = null;
  @SerializedName("host_ids")
  private List<Integer> hostIds = null;
  @SerializedName("invite_ids")
  private List<Integer> inviteIds = null;
  @SerializedName("refresh_registration_url")
  private Boolean refreshRegistrationUrl = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getStartTime() {
    return startTime;
  }
  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getEndTime() {
    return endTime;
  }
  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getLocationId() {
    return locationId;
  }
  public void setLocationId(Integer locationId) {
    this.locationId = locationId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getRegistrationLimit() {
    return registrationLimit;
  }
  public void setRegistrationLimit(Integer registrationLimit) {
    this.registrationLimit = registrationLimit;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getManualRegistrationApproval() {
    return manualRegistrationApproval;
  }
  public void setManualRegistrationApproval(Boolean manualRegistrationApproval) {
    this.manualRegistrationApproval = manualRegistrationApproval;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getPublicRegistrationEnabled() {
    return publicRegistrationEnabled;
  }
  public void setPublicRegistrationEnabled(Boolean publicRegistrationEnabled) {
    this.publicRegistrationEnabled = publicRegistrationEnabled;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Integer> getHostIds() {
    return hostIds;
  }
  public void setHostIds(List<Integer> hostIds) {
    this.hostIds = hostIds;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Integer> getInviteIds() {
    return inviteIds;
  }
  public void setInviteIds(List<Integer> inviteIds) {
    this.inviteIds = inviteIds;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getRefreshRegistrationUrl() {
    return refreshRegistrationUrl;
  }
  public void setRefreshRegistrationUrl(Boolean refreshRegistrationUrl) {
    this.refreshRegistrationUrl = refreshRegistrationUrl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupVisitUpdateParams groupVisitUpdateParams = (GroupVisitUpdateParams) o;
    return (this.name == null ? groupVisitUpdateParams.name == null : this.name.equals(groupVisitUpdateParams.name)) &&
        (this.startTime == null ? groupVisitUpdateParams.startTime == null : this.startTime.equals(groupVisitUpdateParams.startTime)) &&
        (this.endTime == null ? groupVisitUpdateParams.endTime == null : this.endTime.equals(groupVisitUpdateParams.endTime)) &&
        (this.locationId == null ? groupVisitUpdateParams.locationId == null : this.locationId.equals(groupVisitUpdateParams.locationId)) &&
        (this.registrationLimit == null ? groupVisitUpdateParams.registrationLimit == null : this.registrationLimit.equals(groupVisitUpdateParams.registrationLimit)) &&
        (this.manualRegistrationApproval == null ? groupVisitUpdateParams.manualRegistrationApproval == null : this.manualRegistrationApproval.equals(groupVisitUpdateParams.manualRegistrationApproval)) &&
        (this.publicRegistrationEnabled == null ? groupVisitUpdateParams.publicRegistrationEnabled == null : this.publicRegistrationEnabled.equals(groupVisitUpdateParams.publicRegistrationEnabled)) &&
        (this.hostIds == null ? groupVisitUpdateParams.hostIds == null : this.hostIds.equals(groupVisitUpdateParams.hostIds)) &&
        (this.inviteIds == null ? groupVisitUpdateParams.inviteIds == null : this.inviteIds.equals(groupVisitUpdateParams.inviteIds)) &&
        (this.refreshRegistrationUrl == null ? groupVisitUpdateParams.refreshRegistrationUrl == null : this.refreshRegistrationUrl.equals(groupVisitUpdateParams.refreshRegistrationUrl));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.startTime == null ? 0: this.startTime.hashCode());
    result = 31 * result + (this.endTime == null ? 0: this.endTime.hashCode());
    result = 31 * result + (this.locationId == null ? 0: this.locationId.hashCode());
    result = 31 * result + (this.registrationLimit == null ? 0: this.registrationLimit.hashCode());
    result = 31 * result + (this.manualRegistrationApproval == null ? 0: this.manualRegistrationApproval.hashCode());
    result = 31 * result + (this.publicRegistrationEnabled == null ? 0: this.publicRegistrationEnabled.hashCode());
    result = 31 * result + (this.hostIds == null ? 0: this.hostIds.hashCode());
    result = 31 * result + (this.inviteIds == null ? 0: this.inviteIds.hashCode());
    result = 31 * result + (this.refreshRegistrationUrl == null ? 0: this.refreshRegistrationUrl.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupVisitUpdateParams {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  startTime: ").append(startTime).append("\n");
    sb.append("  endTime: ").append(endTime).append("\n");
    sb.append("  locationId: ").append(locationId).append("\n");
    sb.append("  registrationLimit: ").append(registrationLimit).append("\n");
    sb.append("  manualRegistrationApproval: ").append(manualRegistrationApproval).append("\n");
    sb.append("  publicRegistrationEnabled: ").append(publicRegistrationEnabled).append("\n");
    sb.append("  hostIds: ").append(hostIds).append("\n");
    sb.append("  inviteIds: ").append(inviteIds).append("\n");
    sb.append("  refreshRegistrationUrl: ").append(refreshRegistrationUrl).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
